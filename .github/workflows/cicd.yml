name: Build, Push to ECR, and Deploy to EC2

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build-push-deploy:
    runs-on: ubuntu-latest  # Use the latest Ubuntu environment

    steps:
      # 1. Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v3

      # 2. Configure AWS credentials for ECR and EC2
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      # 3. Login to Amazon ECR Public (login to AWS ECR for pushing/pulling images)
      - name: Login to Amazon ECR Public
        run: |
          aws ecr-public get-login-password --region ${{ secrets.AWS_REGION }} \
          | docker login --username AWS --password-stdin public.ecr.aws/b6q5m0o5

      # 4. Build, tag, and push Docker image to ECR
      - name: Build, tag, and push Docker image
        run: |
          set -x
          IMAGE_URI=062266257890.dkr.ecr.us-east-1.amazonaws.com/mediplus:latest  # Ensure the image tag matches your needs

          # Build Docker image from the ./mediplus directory
          docker build -t mediplus .  # Path adjusted as per your repo structure

          # Tag the image for ECR
          docker tag mediplus:latest $IMAGE_URI

          # Push the image to ECR
          docker push $IMAGE_URI

      # 5. Deploy Docker image to EC2 via SSH
      - name: Deploy to EC2
        uses: appleboy/ssh-action@v0.1.9
        with:
          host: ${{ secrets.EC2_HOST }}     # EC2 instance IP or DNS
          username: ${{ secrets.EC2_USER }}  # EC2 username (usually 'ubuntu' for Ubuntu instances)
          key: ${{ secrets.EC2_SSH_KEY }}    # Private SSH key stored as GitHub secret
          script: |
            set -x
            IMAGE_URI=062266257890.dkr.ecr.us-east-1.amazonaws.com/mediplus:latest  # Image URI used in EC2

            # Stop and remove any existing container (if running)
            sudo docker stop mediplus || true
            sudo docker rm mediplus || true

            # Log in to ECR Public from EC2 instance
            aws ecr-public get-login-password --region ${{ secrets.AWS_REGION }} \
            | sudo docker login --username AWS --password-stdin public.ecr.aws/b6q5m0o5

            # Pull the latest Docker image
            sudo docker pull $IMAGE_URI

            # Run the new container in detached mode, exposing port 80
            sudo docker run -d --name mediplus -p 80:80 $IMAGE_URI


      # 5. Deploy to EC2 via SSH
      - name: Deploy to EC2
        uses: appleboy/ssh-action@v0.1.9
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}     # Usually 'ubuntu'
          key: ${{ secrets.EC2_SSH_KEY }}       # Private SSH key stored as secret
          script: |
            set -x
            IMAGE_URI=062266257890.dkr.ecr.us-east-1.amazonaws.com/mediplus:v2

            # Stop and remove existing container
            sudo docker stop mediplus || true
            sudo docker rm mediplus || true

            # Log in to ECR Public
            aws ecr-public get-login-password --region ${{ secrets.AWS_REGION }} \
            | sudo docker login --username AWS --password-stdin public.ecr.aws/b6q5m0o5

            # Pull the latest image version
            sudo docker pull $IMAGE_URI

            # Run new container
            sudo docker run -d --name mediplus -p 80:80 $IMAGE_URI


























































































































